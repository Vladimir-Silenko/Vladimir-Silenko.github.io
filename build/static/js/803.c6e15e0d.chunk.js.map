{"version":3,"file":"static/js/803.c6e15e0d.chunk.js","mappings":"iLACA,EAAyB,2BAAzB,EAA2D,yBAA3D,EAA8F,4BAA9F,EAAmI,2BAAnI,EAAuK,2B,SCavK,EAZmB,SAACA,GAChB,IAAIC,EAAaC,EAAQ,MACzB,OACI,gBAAKC,MAAO,CAAEC,UAAW,SAAzB,UACI,UAAC,KAAD,CAASC,GAAE,mBAAcL,EAAMM,IAAMC,UAAW,SAAAC,GAAI,OAAIA,EAAKC,SAAWR,EAAWS,EAAeA,GAAiBA,CAA/D,EAApD,WACI,gBAAKH,UAAWG,EAAeC,IAAKX,EAAMY,IAAKC,IAAI,MACnD,iBAAMN,UAAWG,EAAjB,SAA+BV,EAAMc,QACrC,iBAAMP,UAAWG,EAAjB,SAAkCV,EAAMe,cAIvD,ECZD,EAA4B,2BAA5B,EAAiE,yBAAjE,EAA8G,mCAA9G,EAA4K,0C,gDCEtKC,EAAUC,EAAAA,GAAAA,IAAH,gMAIC,SAAAjB,GAAK,MAAkB,QAAdA,EAAMkB,IAAgB,QAAU,MAApC,IAenB,EATiB,SAAClB,GACGE,EAAQ,MACzB,OACI,UAACc,GAAD,kBAAahB,GAAb,eACI,uBAAIA,EAAMmB,WACV,0BAAOC,IAAMpB,EAAMqB,MAAMC,OAAO,oBAG3C,E,qEChBKC,EAAqBN,EAAAA,GAAAA,IAAH,yMA4BlBO,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EATL,SAACzB,GACpB,OAAO,kBAAM2B,SAAU3B,EAAM4B,aAAtB,WACH,SAACC,EAAA,EAAD,CACIC,UAAWC,EAAAA,EACXC,YAAY,UACZlB,KAAK,oBACT,SAAC,IAAD,qBAEP,IAED,EAnBoB,SAACd,GAKjB,OAAO,SAACuB,EAAD,WACH,SAACC,EAAD,CAAqBG,SALZ,SAACM,GACVjC,EAAMkC,KAAKD,EAAOE,gBAClBF,EAAOE,eAAiB,EAC3B,KAIJ,ECdD,EAL6B,SAACnC,GAC1B,IAAIoC,GAAWC,EAAAA,EAAAA,MAEf,OAAO,SAAE,EAAF,CAAcH,KADR,SAACC,GAAD,OAAoBC,GAASE,EAAAA,EAAAA,GAAyBH,GAAtD,GAEhB,E,UCwBD,EA1BgB,SAACnC,GACb,IAAMuC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKG,MAAf,IACxBC,GAAWC,EAAAA,EAAAA,KAEbC,GAAOL,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMK,SAASC,WAAnB,IACxBC,GAAOR,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMK,SAASG,WAAnB,IACxBC,EAAUL,EAAKM,KAAI,SAAA3C,GAAI,OAAI,SAAC,EAAD,CAAYI,IAAKJ,EAAKI,IAAKE,KAAMN,EAAKM,KAAMC,QAASP,EAAKO,SAAcP,EAAKF,GAAjF,IACvBwC,EAAWE,EAAKG,KAAI,SAAA3C,GAAI,OAAI,SAAC,EAAD,CAAUa,KAAMb,EAAK4C,QAAuBjC,QAASX,EAAK6C,QAASnC,IAAKV,EAAKU,KAA1CV,EAAKF,GAA5C,IAC5B,OAAKiC,GAED,iBAAKhC,UAAWG,EAAhB,WACI,gBAAKH,UAAWG,EAAhB,SACKwC,KAEL,iBAAK3C,UAAWG,EAAhB,WACI,gBAAKH,UAAWG,EAAhB,SACKoC,KAEL,SAAC,EAAD,CACIQ,MAAOtD,EAAMsD,cAXXX,CAgBrB,C","sources":["webpack://react-lessons/./src/components/dialogs/DialogItems/DialogItem.module.css?3a79","components/dialogs/DialogItems/DialogItem.jsx","webpack://react-lessons/./src/components/dialogs/Dialogs.module.css?04a9","components/dialogs/messages/Messages.jsx","components/dialogs/messages/SendMessage.jsx","components/dialogs/messages/SendMessageContainer.jsx","components/dialogs/Dialogs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__+2Jd8\",\"name\":\"DialogItem_name__SvlhX\",\"surname\":\"DialogItem_surname__baezF\",\"active\":\"DialogItem_active__6lHAC\",\"avatar\":\"DialogItem_avatar__6OeKj\"};","import { NavLink } from 'react-router-dom'\nimport styles from './DialogItem.module.css'\nconst DialogItem = (props) => {\n    let classNames = require('classnames')\n    return (\n        <div style={{ maxHeight: '100px' }} >\n            <NavLink to={`/dialogs/${props.id}`} className={item => item.isActive ? classNames(styles.dialog, styles.active) : styles.dialog}>\n                <img className={styles.avatar} src={props.ava} alt=\"\" />\n                <span className={styles.name}>{props.name}</span>\n                <span className={styles.surname}>{props.surname}</span>\n            </NavLink >\n        </div>\n    )\n}\nexport default DialogItem","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Dialogs_container__+vq1Z\",\"dialogs\":\"Dialogs_dialogs__ODBx3\",\"message_container\":\"Dialogs_message_container__IH7Jv\",\"messageContent_container\":\"Dialogs_messageContent_container__u8+t2\"};","\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nconst Message = styled.div`\ndisplay: flex;\nflex-direction: column;\npadding: 10px;\nmargin-left:${props => props.you === 'you' ? '250px' : '10px'} ;\nheight: 100px;\nwidth: 200px;\nbackground-color: rgb(229, 229, 229);\nborder-radius: 10px;\n`\nconst Messages = (props) => {\n    let classNames = require('classnames')\n    return (\n        <Message {...props}>\n            <p>{props.content}</p>\n            <span>{dayjs(props.time).format('D.MMM HH:mm')}</span>\n        </Message>\n    )\n}\nexport default Messages\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport styled from 'styled-components'\nimport { Btn } from '../../reusable/button'\nimport { Textarea } from '../../reusable/Textarea'\nconst SendMessageSection = styled.div`\nwidth: 95%;\nheight: 100px;\nbackground-color: #fff;\ndisplay: flex;\nflex-direction: column;\npadding: 10px;\nborder-top:1px solid lightgrey;\nborder-bottom-left-radius:20px;\n`\nconst SendMessage = (props) => {\n    const Send = (values) => {\n        props.Send(values.newMessageText)\n        values.newMessageText = ''\n    }\n    return <SendMessageSection>\n        <AddMessageFormRedux onSubmit={Send} />\n    </SendMessageSection>\n}\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <Field\n            component={Textarea}\n            placeholder='Type...'\n            name=\"newMessageText\" />\n        <Btn>Send</Btn>\n    </form>\n}\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\nexport default SendMessage","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { sendMessageActionCreator } from '../../../redux/dialogs-reducer'\nimport SendMessage from './SendMessage'\nconst SendMessageContainer = (props) => {\n    let dispatch = useDispatch()\n    const Send = (newMessageText) => dispatch(sendMessageActionCreator(newMessageText))\n    return < SendMessage Send={Send} />\n}\nexport default SendMessageContainer","import DialogItem from './DialogItems/DialogItem'\nimport styles from './Dialogs.module.css'\nimport Messages from './messages/Messages';\nimport SendMessageContainer from './messages/SendMessageContainer';\nimport { useSelector } from 'react-redux';\nimport { useRedirect } from '../../hooks/useRedirect';\nconst Dialogs = (props) => {\n    const auth = useSelector(state => state.auth.isAuth)\n    const redirect = useRedirect()\n\n    let dlgs = useSelector(state => state.messages.dialogsData)\n    let msgs = useSelector(state => state.messages.messageData)\n    let dialogs = dlgs.map(item => <DialogItem ava={item.ava} name={item.name} surname={item.surname} key={item.id} />);\n    let messages = msgs.map(item => <Messages time={item.created} key={item.id} content={item.message} you={item.you} />)\n    if (!auth) return redirect\n    return (\n        <div className={styles.container}>\n            <div className={styles.dialogs}>\n                {dialogs}\n            </div>\n            <div className={styles.message_container}>\n                <div className={styles.messageContent_container}>\n                    {messages}\n                </div>\n                <SendMessageContainer\n                    store={props.store} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Dialogs"],"names":["props","classNames","require","style","maxHeight","to","id","className","item","isActive","styles","src","ava","alt","name","surname","Message","styled","you","content","dayjs","time","format","SendMessageSection","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","values","Send","newMessageText","dispatch","useDispatch","sendMessageActionCreator","auth","useSelector","state","isAuth","redirect","useRedirect","dlgs","messages","dialogsData","msgs","messageData","dialogs","map","created","message","store"],"sourceRoot":""}